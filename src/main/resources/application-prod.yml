spring:
  application:
    name: azhur-katering-backend-java

  # ========================================
  # DATABASE CONFIGURATION
  # ========================================
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/azhur_katering}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    open-in-view: false
    properties:
      hibernate:
        format_sql: true

  # ========================================
  # FLYWAY MIGRATION CONFIGURATION
  # ========================================
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: false
    validate-on-migrate: true
    out-of-order: false
    table: flyway_schema_history
    sql-migration-prefix: V
    sql-migration-separator: __
    sql-migration-suffixes: .sql
    clean-disabled: false

  # ========================================
  # EMAIL CONFIGURATION (YANDEX)
  # ========================================
  mail:
    host: ${SPRING_MAIL_HOST:smtp.yandex.ru}
    port: ${SPRING_MAIL_PORT:465}
    username: ${YANDEX_USERNAME}
    password: ${SMTP_PASSWORD}
    properties:
      mail.smtp.auth: ${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH:true}
      mail.smtp.ssl.enable: true
      mail.smtp.starttls.enable: ${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE:false}
      mail.smtp.connectiontimeout: 10000
      mail.smtp.timeout: 10000
      mail.smtp.writetimeout: 10000

  # ========================================
  # REDIS CONFIGURATION
  # ========================================
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: ${REDIS_DATABASE:0}
      lettuce:
        pool:
          max-active: ${REDIS_MAX_ACTIVE:8}
          max-idle: ${REDIS_MAX_IDLE:8}
          min-idle: ${REDIS_MIN_IDLE:0}
          max-wait: ${REDIS_MAX_WAIT:-1}

  # ========================================
  # MULTIPART CONFIGURATION
  # ========================================
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
      file-size-threshold: 2KB

# ========================================
# JWT CONFIGURATION
# ========================================
jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:900000}  # 15 минут
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}  # 7 дней

# ========================================
# COOKIE CONFIGURATION
# ========================================
app:
  cookie:
    domain: ${COOKIE_DOMAIN:}  # Оставить пустым для localhost
    secure: ${COOKIE_SECURE:false}  # false для http, true для https
  
  # ========================================
  # Настройки для изображений блюд
  # ========================================
  images:
    upload:
      path: uploads/images
    thumbnail:
      width: 300
      height: 300
    max:
      file:
        size: 5242880 # 5MB
    quality: 0.8

# ========================================
# SERVER CONFIGURATION
# ========================================
server:
  port: 8080

# ========================================
# LOGGING
# ========================================
logging:
  level:
#    root: INFO
#    azhue.katering: DEBUG
#    org.springframework.mail: DEBUG
#    com.sun.mail: DEBUG
#    org.springframework.security: DEBUG
#    org.hibernate: DEBUG
#    org.springdoc: DEBUG
#    org.springframework.web: DEBUG
    # Отключаем автоматическое логирование исключений Spring Boot
    org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: ERROR
    org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver: ERROR

# ========================================
# SWAGGER/OPENAPI CONFIGURATION
# ========================================
springdoc:
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
  api-docs:
    enabled: true
    path: /v3/api-docs

# ========================================
# MONITORING & METRICS CONFIGURATION
# ========================================
management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus,caches
      base-path: /actuator
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: azhur-katering
      environment: dev
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5,0.95,0.99
  prometheus:
    metrics:
      export:
        enabled: true
  tracing:
    sampling:
      probability: 1.0
    propagation:
      type: w3c
